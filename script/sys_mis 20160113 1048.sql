--
-- Script was generated by Devart dbForge Studio for MySQL, Version 6.3.358.0
-- Product home page: http://www.devart.com/dbforge/mysql/studio
-- Script date 2016/1/13 10:48:51
-- Server version: 5.7.10
-- Client version: 4.1
--


-- 
-- Disable foreign keys
-- 
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;

-- 
-- Set SQL mode
-- 
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;

-- 
-- Set character set the client will use to send SQL statements to the server
--
SET NAMES 'utf8';

-- 
-- Set default database
--
USE sys_mis;

--
-- Definition for table jobs
--
DROP TABLE IF EXISTS jobs;
CREATE TABLE jobs (
  id BIGINT(20) UNSIGNED NOT NULL AUTO_INCREMENT,
  queue VARCHAR(255) NOT NULL,
  payload LONGTEXT NOT NULL,
  attempts TINYINT(3) UNSIGNED NOT NULL,
  reserved TINYINT(3) UNSIGNED NOT NULL,
  reserved_at INT(10) UNSIGNED DEFAULT NULL,
  available_at INT(10) UNSIGNED NOT NULL,
  created_at INT(10) UNSIGNED NOT NULL,
  PRIMARY KEY (id),
  INDEX jobs_queue_reserved_reserved_at_index (queue, reserved, reserved_at)
)
ENGINE = INNODB
AUTO_INCREMENT = 1
CHARACTER SET utf8
COLLATE utf8_unicode_ci
ROW_FORMAT = DYNAMIC;

--
-- Definition for table migrations
--
DROP TABLE IF EXISTS migrations;
CREATE TABLE migrations (
  migration VARCHAR(255) NOT NULL,
  batch INT(11) NOT NULL
)
ENGINE = INNODB
AVG_ROW_LENGTH = 468
CHARACTER SET utf8
COLLATE utf8_unicode_ci
ROW_FORMAT = DYNAMIC;

--
-- Definition for table oauth_clients
--
DROP TABLE IF EXISTS oauth_clients;
CREATE TABLE oauth_clients (
  id VARCHAR(40) NOT NULL,
  secret VARCHAR(40) NOT NULL,
  name VARCHAR(255) NOT NULL,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (id),
  UNIQUE INDEX oauth_clients_id_secret_unique (id, secret)
)
ENGINE = INNODB
AVG_ROW_LENGTH = 16384
CHARACTER SET utf8
COLLATE utf8_unicode_ci
ROW_FORMAT = DYNAMIC;

--
-- Definition for table oauth_grants
--
DROP TABLE IF EXISTS oauth_grants;
CREATE TABLE oauth_grants (
  id VARCHAR(40) NOT NULL,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (id)
)
ENGINE = INNODB
AVG_ROW_LENGTH = 8192
CHARACTER SET utf8
COLLATE utf8_unicode_ci
ROW_FORMAT = DYNAMIC;

--
-- Definition for table oauth_scopes
--
DROP TABLE IF EXISTS oauth_scopes;
CREATE TABLE oauth_scopes (
  id VARCHAR(40) NOT NULL,
  description VARCHAR(255) NOT NULL,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (id)
)
ENGINE = INNODB
AVG_ROW_LENGTH = 8192
CHARACTER SET utf8
COLLATE utf8_unicode_ci
ROW_FORMAT = DYNAMIC;

--
-- Definition for table sys_config
--
DROP TABLE IF EXISTS sys_config;
CREATE TABLE sys_config (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  moduleid VARCHAR(255) NOT NULL,
  name VARCHAR(50) NOT NULL,
  cate VARCHAR(255) NOT NULL,
  type VARCHAR(255) NOT NULL,
  value TEXT NOT NULL,
  description VARCHAR(255) NOT NULL,
  created_at DATETIME NOT NULL,
  updated_at DATETIME DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB
AUTO_INCREMENT = 1
CHARACTER SET utf8
COLLATE utf8_unicode_ci
ROW_FORMAT = DYNAMIC;

--
-- Definition for table sys_element
--
DROP TABLE IF EXISTS sys_element;
CREATE TABLE sys_element (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  moduleid VARCHAR(50) NOT NULL,
  page VARCHAR(50) DEFAULT NULL,
  name VARCHAR(50) NOT NULL,
  description VARCHAR(255) DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB
AUTO_INCREMENT = 1
CHARACTER SET utf8
COLLATE utf8_unicode_ci
ROW_FORMAT = DYNAMIC;

--
-- Definition for table sys_failed_jobs
--
DROP TABLE IF EXISTS sys_failed_jobs;
CREATE TABLE sys_failed_jobs (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `connection` TEXT NOT NULL,
  queue TEXT NOT NULL,
  payload LONGTEXT NOT NULL,
  failed_at TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (id)
)
ENGINE = INNODB
AUTO_INCREMENT = 1
CHARACTER SET utf8
COLLATE utf8_unicode_ci
ROW_FORMAT = DYNAMIC;

--
-- Definition for table sys_functions
--
DROP TABLE IF EXISTS sys_functions;
CREATE TABLE sys_functions (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  moduleid VARCHAR(50) NOT NULL,
  name VARCHAR(50) NOT NULL,
  code VARCHAR(50) NOT NULL,
  url VARCHAR(255) DEFAULT NULL,
  pid INT(10) UNSIGNED NOT NULL,
  description VARCHAR(255) DEFAULT NULL,
  created_at DATETIME DEFAULT NULL,
  updated_at DATETIME DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB
AUTO_INCREMENT = 1
CHARACTER SET utf8
COLLATE utf8_unicode_ci
ROW_FORMAT = DYNAMIC;

--
-- Definition for table sys_group_role
--
DROP TABLE IF EXISTS sys_group_role;
CREATE TABLE sys_group_role (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  group_id INT(10) UNSIGNED NOT NULL,
  role_id INT(10) UNSIGNED NOT NULL,
  created_at DATETIME DEFAULT NULL,
  updated_at DATETIME DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB
AUTO_INCREMENT = 1
CHARACTER SET utf8
COLLATE utf8_unicode_ci
ROW_FORMAT = DYNAMIC;

--
-- Definition for table sys_groups
--
DROP TABLE IF EXISTS sys_groups;
CREATE TABLE sys_groups (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  name VARCHAR(50) NOT NULL,
  pid INT(10) UNSIGNED NOT NULL,
  description VARCHAR(255) DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB
AUTO_INCREMENT = 1
CHARACTER SET utf8
COLLATE utf8_unicode_ci
ROW_FORMAT = DYNAMIC;

--
-- Definition for table sys_menus
--
DROP TABLE IF EXISTS sys_menus;
CREATE TABLE sys_menus (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  moduleid VARCHAR(50) NOT NULL,
  name VARCHAR(50) NOT NULL,
  url VARCHAR(255) NOT NULL,
  pid INT(10) UNSIGNED NOT NULL,
  ico VARCHAR(255) DEFAULT NULL,
  `order` INT(10) UNSIGNED NOT NULL,
  descrition VARCHAR(255) DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB
AUTO_INCREMENT = 1
CHARACTER SET utf8
COLLATE utf8_unicode_ci
ROW_FORMAT = DYNAMIC;

--
-- Definition for table sys_permission_element
--
DROP TABLE IF EXISTS sys_permission_element;
CREATE TABLE sys_permission_element (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  permission_id INT(10) UNSIGNED NOT NULL,
  element_id INT(10) UNSIGNED NOT NULL,
  created_at DATETIME DEFAULT NULL,
  updated_at DATETIME DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB
AUTO_INCREMENT = 1
CHARACTER SET utf8
COLLATE utf8_unicode_ci
ROW_FORMAT = DYNAMIC;

--
-- Definition for table sys_permission_function
--
DROP TABLE IF EXISTS sys_permission_function;
CREATE TABLE sys_permission_function (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  function_id INT(10) UNSIGNED NOT NULL,
  permission_id INT(10) UNSIGNED NOT NULL,
  created_at DATETIME DEFAULT NULL,
  updated_at DATETIME DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB
AUTO_INCREMENT = 1
CHARACTER SET utf8
COLLATE utf8_unicode_ci
ROW_FORMAT = DYNAMIC;

--
-- Definition for table sys_permission_menu
--
DROP TABLE IF EXISTS sys_permission_menu;
CREATE TABLE sys_permission_menu (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  permission_id INT(10) UNSIGNED NOT NULL,
  menu_id INT(10) UNSIGNED NOT NULL,
  created_at DATETIME DEFAULT NULL,
  updated_at DATETIME DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB
AUTO_INCREMENT = 1
CHARACTER SET utf8
COLLATE utf8_unicode_ci
ROW_FORMAT = DYNAMIC;

--
-- Definition for table sys_permissions
--
DROP TABLE IF EXISTS sys_permissions;
CREATE TABLE sys_permissions (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  moduleid VARCHAR(50) NOT NULL,
  type VARCHAR(50) NOT NULL,
  itemid INT(10) UNSIGNED NOT NULL,
  name VARCHAR(50) NOT NULL,
  description VARCHAR(255) DEFAULT NULL,
  created_at DATETIME DEFAULT NULL,
  updated_at DATETIME DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB
AUTO_INCREMENT = 1
CHARACTER SET utf8
COLLATE utf8_unicode_ci
ROW_FORMAT = DYNAMIC;

--
-- Definition for table sys_role_permission
--
DROP TABLE IF EXISTS sys_role_permission;
CREATE TABLE sys_role_permission (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  permission_id INT(10) UNSIGNED NOT NULL,
  role_id INT(10) UNSIGNED NOT NULL,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (id)
)
ENGINE = INNODB
AUTO_INCREMENT = 1
CHARACTER SET utf8
COLLATE utf8_unicode_ci
ROW_FORMAT = DYNAMIC;

--
-- Definition for table sys_roles
--
DROP TABLE IF EXISTS sys_roles;
CREATE TABLE sys_roles (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  name VARCHAR(255) NOT NULL,
  slug VARCHAR(255) NOT NULL,
  description TEXT DEFAULT NULL,
  created_at TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (id),
  UNIQUE INDEX sys_roles_slug_unique (slug)
)
ENGINE = INNODB
AUTO_INCREMENT = 5
AVG_ROW_LENGTH = 5461
CHARACTER SET utf8
COLLATE utf8_unicode_ci
ROW_FORMAT = DYNAMIC;

--
-- Definition for table sys_user_group
--
DROP TABLE IF EXISTS sys_user_group;
CREATE TABLE sys_user_group (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  group_id INT(10) UNSIGNED NOT NULL,
  user_id INT(10) UNSIGNED NOT NULL,
  created_at DATETIME DEFAULT NULL,
  updated_at DATETIME DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB
AUTO_INCREMENT = 1
CHARACTER SET utf8
COLLATE utf8_unicode_ci
ROW_FORMAT = DYNAMIC;

--
-- Definition for table sys_user_role
--
DROP TABLE IF EXISTS sys_user_role;
CREATE TABLE sys_user_role (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  role_id INT(10) UNSIGNED NOT NULL,
  user_id INT(10) UNSIGNED NOT NULL,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (id)
)
ENGINE = INNODB
AUTO_INCREMENT = 1
CHARACTER SET utf8
COLLATE utf8_unicode_ci
ROW_FORMAT = DYNAMIC;

--
-- Definition for table sys_validatecode
--
DROP TABLE IF EXISTS sys_validatecode;
CREATE TABLE sys_validatecode (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  uid INT(10) UNSIGNED NOT NULL,
  mobile VARCHAR(255) DEFAULT NULL,
  expiretime INT(10) UNSIGNED NOT NULL,
  type TINYINT(1) NOT NULL DEFAULT 1,
  code VARCHAR(255) NOT NULL,
  email VARCHAR(50) DEFAULT NULL,
  created_at DATETIME DEFAULT NULL,
  updated_at DATETIME DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB
AUTO_INCREMENT = 9
AVG_ROW_LENGTH = 2048
CHARACTER SET utf8
COLLATE utf8_unicode_ci
ROW_FORMAT = DYNAMIC;

--
-- Definition for table users
--
DROP TABLE IF EXISTS users;
CREATE TABLE users (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  username VARCHAR(16) NOT NULL,
  name VARCHAR(50) NOT NULL,
  mobile VARCHAR(11) NOT NULL,
  password VARCHAR(255) NOT NULL,
  nickname VARCHAR(32) NOT NULL,
  gender TINYINT(1) NOT NULL,
  qq VARCHAR(32) NOT NULL,
  openid VARCHAR(64) NOT NULL,
  weixinnickname VARCHAR(64) NOT NULL,
  country VARCHAR(32) NOT NULL,
  province VARCHAR(32) NOT NULL,
  city VARCHAR(32) NOT NULL,
  adress VARCHAR(255) NOT NULL,
  avatar VARCHAR(255) NOT NULL,
  email VARCHAR(50) NOT NULL,
  lastlogindate DATETIME DEFAULT NULL,
  idcard_type TINYINT(1) NOT NULL DEFAULT 1,
  idcard VARCHAR(50) NOT NULL,
  status TINYINT(1) NOT NULL DEFAULT 1,
  created_at DATETIME DEFAULT NULL,
  updated_at DATETIME DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE INDEX users_mobile_unique (mobile)
)
ENGINE = INNODB
AUTO_INCREMENT = 103
AVG_ROW_LENGTH = 309
CHARACTER SET utf8
COLLATE utf8_unicode_ci
ROW_FORMAT = DYNAMIC;

--
-- Definition for table users_logs
--
DROP TABLE IF EXISTS users_logs;
CREATE TABLE users_logs (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (id)
)
ENGINE = INNODB
AUTO_INCREMENT = 1
CHARACTER SET utf8
COLLATE utf8_unicode_ci
ROW_FORMAT = DYNAMIC;

--
-- Definition for table users_messages
--
DROP TABLE IF EXISTS users_messages;
CREATE TABLE users_messages (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  type TINYINT(1) NOT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB
AUTO_INCREMENT = 1
CHARACTER SET utf8
COLLATE utf8_unicode_ci
ROW_FORMAT = DYNAMIC;

--
-- Definition for table users_password_resets
--
DROP TABLE IF EXISTS users_password_resets;
CREATE TABLE users_password_resets (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  mobile VARCHAR(11) DEFAULT NULL,
  email VARCHAR(50) DEFAULT NULL,
  token VARCHAR(255) NOT NULL,
  wx_openid VARCHAR(255) DEFAULT NULL,
  created_at DATETIME DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB
AUTO_INCREMENT = 1
CHARACTER SET utf8
COLLATE utf8_unicode_ci
ROW_FORMAT = DYNAMIC;

--
-- Definition for table users_pm
--
DROP TABLE IF EXISTS users_pm;
CREATE TABLE users_pm (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  title VARCHAR(255) NOT NULL COMMENT '标题',
  content VARCHAR(255) DEFAULT NULL COMMENT '内容',
  accept_user_id INT(11) NOT NULL COMMENT '接收人id',
  send_user_id INT(11) NOT NULL COMMENT '发出人id',
  status TINYINT(1) NOT NULL DEFAULT 0 COMMENT '0=未读 1=已读',
  pid INT(11) NOT NULL DEFAULT 0 COMMENT '父id',
  module VARCHAR(32) DEFAULT NULL COMMENT '模块名称',
  created_at DATETIME DEFAULT NULL,
  updated_at DATETIME DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB
AUTO_INCREMENT = 3
AVG_ROW_LENGTH = 8192
CHARACTER SET utf8
COLLATE utf8_general_ci
COMMENT = '用户站内信'
ROW_FORMAT = DYNAMIC;

--
-- Definition for table oauth_client_endpoints
--
DROP TABLE IF EXISTS oauth_client_endpoints;
CREATE TABLE oauth_client_endpoints (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  client_id VARCHAR(40) NOT NULL,
  redirect_uri VARCHAR(255) NOT NULL,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (id),
  UNIQUE INDEX oauth_client_endpoints_client_id_redirect_uri_unique (client_id, redirect_uri),
  CONSTRAINT oauth_client_endpoints_client_id_foreign FOREIGN KEY (client_id)
    REFERENCES oauth_clients(id) ON DELETE CASCADE ON UPDATE CASCADE
)
ENGINE = INNODB
AUTO_INCREMENT = 1
CHARACTER SET utf8
COLLATE utf8_unicode_ci
ROW_FORMAT = DYNAMIC;

--
-- Definition for table oauth_client_grants
--
DROP TABLE IF EXISTS oauth_client_grants;
CREATE TABLE oauth_client_grants (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  client_id VARCHAR(40) NOT NULL,
  grant_id VARCHAR(40) NOT NULL,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (id),
  INDEX oauth_client_grants_client_id_index (client_id),
  INDEX oauth_client_grants_grant_id_index (grant_id),
  CONSTRAINT oauth_client_grants_client_id_foreign FOREIGN KEY (client_id)
    REFERENCES oauth_clients(id) ON DELETE CASCADE ON UPDATE NO ACTION,
  CONSTRAINT oauth_client_grants_grant_id_foreign FOREIGN KEY (grant_id)
    REFERENCES oauth_grants(id) ON DELETE CASCADE ON UPDATE NO ACTION
)
ENGINE = INNODB
AUTO_INCREMENT = 2
AVG_ROW_LENGTH = 16384
CHARACTER SET utf8
COLLATE utf8_unicode_ci
ROW_FORMAT = DYNAMIC;

--
-- Definition for table oauth_client_scopes
--
DROP TABLE IF EXISTS oauth_client_scopes;
CREATE TABLE oauth_client_scopes (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  client_id VARCHAR(40) NOT NULL,
  scope_id VARCHAR(40) NOT NULL,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (id),
  INDEX oauth_client_scopes_client_id_index (client_id),
  INDEX oauth_client_scopes_scope_id_index (scope_id),
  CONSTRAINT oauth_client_scopes_client_id_foreign FOREIGN KEY (client_id)
    REFERENCES oauth_clients(id) ON DELETE CASCADE ON UPDATE RESTRICT,
  CONSTRAINT oauth_client_scopes_scope_id_foreign FOREIGN KEY (scope_id)
    REFERENCES oauth_scopes(id) ON DELETE CASCADE ON UPDATE RESTRICT
)
ENGINE = INNODB
AUTO_INCREMENT = 1
CHARACTER SET utf8
COLLATE utf8_unicode_ci
ROW_FORMAT = DYNAMIC;

--
-- Definition for table oauth_grant_scopes
--
DROP TABLE IF EXISTS oauth_grant_scopes;
CREATE TABLE oauth_grant_scopes (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  grant_id VARCHAR(40) NOT NULL,
  scope_id VARCHAR(40) NOT NULL,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (id),
  INDEX oauth_grant_scopes_grant_id_index (grant_id),
  INDEX oauth_grant_scopes_scope_id_index (scope_id),
  CONSTRAINT oauth_grant_scopes_grant_id_foreign FOREIGN KEY (grant_id)
    REFERENCES oauth_grants(id) ON DELETE CASCADE ON UPDATE RESTRICT,
  CONSTRAINT oauth_grant_scopes_scope_id_foreign FOREIGN KEY (scope_id)
    REFERENCES oauth_scopes(id) ON DELETE CASCADE ON UPDATE RESTRICT
)
ENGINE = INNODB
AUTO_INCREMENT = 4
AVG_ROW_LENGTH = 5461
CHARACTER SET utf8
COLLATE utf8_unicode_ci
ROW_FORMAT = DYNAMIC;

--
-- Definition for table oauth_sessions
--
DROP TABLE IF EXISTS oauth_sessions;
CREATE TABLE oauth_sessions (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  client_id VARCHAR(40) NOT NULL,
  owner_type ENUM('client','user') NOT NULL DEFAULT 'user',
  owner_id VARCHAR(255) NOT NULL,
  client_redirect_uri VARCHAR(255) DEFAULT NULL,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (id),
  INDEX oauth_sessions_client_id_owner_type_owner_id_index (client_id, owner_type, owner_id),
  CONSTRAINT oauth_sessions_client_id_foreign FOREIGN KEY (client_id)
    REFERENCES oauth_clients(id) ON DELETE CASCADE ON UPDATE CASCADE
)
ENGINE = INNODB
AUTO_INCREMENT = 63
AVG_ROW_LENGTH = 264
CHARACTER SET utf8
COLLATE utf8_unicode_ci
ROW_FORMAT = DYNAMIC;

--
-- Definition for table oauth_access_tokens
--
DROP TABLE IF EXISTS oauth_access_tokens;
CREATE TABLE oauth_access_tokens (
  id VARCHAR(40) NOT NULL,
  session_id INT(10) UNSIGNED NOT NULL,
  expire_time INT(11) NOT NULL,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (id),
  UNIQUE INDEX oauth_access_tokens_id_session_id_unique (id, session_id),
  INDEX oauth_access_tokens_session_id_index (session_id),
  CONSTRAINT oauth_access_tokens_session_id_foreign FOREIGN KEY (session_id)
    REFERENCES oauth_sessions(id) ON DELETE CASCADE ON UPDATE RESTRICT
)
ENGINE = INNODB
AVG_ROW_LENGTH = 264
CHARACTER SET utf8
COLLATE utf8_unicode_ci
ROW_FORMAT = DYNAMIC;

--
-- Definition for table oauth_auth_codes
--
DROP TABLE IF EXISTS oauth_auth_codes;
CREATE TABLE oauth_auth_codes (
  id VARCHAR(40) NOT NULL,
  session_id INT(10) UNSIGNED NOT NULL,
  redirect_uri VARCHAR(255) NOT NULL,
  expire_time INT(11) NOT NULL,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (id),
  INDEX oauth_auth_codes_session_id_index (session_id),
  CONSTRAINT oauth_auth_codes_session_id_foreign FOREIGN KEY (session_id)
    REFERENCES oauth_sessions(id) ON DELETE CASCADE ON UPDATE RESTRICT
)
ENGINE = INNODB
CHARACTER SET utf8
COLLATE utf8_unicode_ci
ROW_FORMAT = DYNAMIC;

--
-- Definition for table oauth_session_scopes
--
DROP TABLE IF EXISTS oauth_session_scopes;
CREATE TABLE oauth_session_scopes (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  session_id INT(10) UNSIGNED NOT NULL,
  scope_id VARCHAR(40) NOT NULL,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (id),
  INDEX oauth_session_scopes_scope_id_index (scope_id),
  INDEX oauth_session_scopes_session_id_index (session_id),
  CONSTRAINT oauth_session_scopes_scope_id_foreign FOREIGN KEY (scope_id)
    REFERENCES oauth_scopes(id) ON DELETE CASCADE ON UPDATE RESTRICT,
  CONSTRAINT oauth_session_scopes_session_id_foreign FOREIGN KEY (session_id)
    REFERENCES oauth_sessions(id) ON DELETE CASCADE ON UPDATE RESTRICT
)
ENGINE = INNODB
AUTO_INCREMENT = 1
CHARACTER SET utf8
COLLATE utf8_unicode_ci
ROW_FORMAT = DYNAMIC;

--
-- Definition for table oauth_access_token_scopes
--
DROP TABLE IF EXISTS oauth_access_token_scopes;
CREATE TABLE oauth_access_token_scopes (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  access_token_id VARCHAR(40) NOT NULL,
  scope_id VARCHAR(40) NOT NULL,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (id),
  INDEX oauth_access_token_scopes_access_token_id_index (access_token_id),
  INDEX oauth_access_token_scopes_scope_id_index (scope_id),
  CONSTRAINT oauth_access_token_scopes_access_token_id_foreign FOREIGN KEY (access_token_id)
    REFERENCES oauth_access_tokens(id) ON DELETE CASCADE ON UPDATE RESTRICT,
  CONSTRAINT oauth_access_token_scopes_scope_id_foreign FOREIGN KEY (scope_id)
    REFERENCES oauth_scopes(id) ON DELETE CASCADE ON UPDATE RESTRICT
)
ENGINE = INNODB
AUTO_INCREMENT = 1
CHARACTER SET utf8
COLLATE utf8_unicode_ci
ROW_FORMAT = DYNAMIC;

--
-- Definition for table oauth_auth_code_scopes
--
DROP TABLE IF EXISTS oauth_auth_code_scopes;
CREATE TABLE oauth_auth_code_scopes (
  id INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  auth_code_id VARCHAR(40) NOT NULL,
  scope_id VARCHAR(40) NOT NULL,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (id),
  INDEX oauth_auth_code_scopes_auth_code_id_index (auth_code_id),
  INDEX oauth_auth_code_scopes_scope_id_index (scope_id),
  CONSTRAINT oauth_auth_code_scopes_auth_code_id_foreign FOREIGN KEY (auth_code_id)
    REFERENCES oauth_auth_codes(id) ON DELETE CASCADE ON UPDATE RESTRICT,
  CONSTRAINT oauth_auth_code_scopes_scope_id_foreign FOREIGN KEY (scope_id)
    REFERENCES oauth_scopes(id) ON DELETE CASCADE ON UPDATE RESTRICT
)
ENGINE = INNODB
AUTO_INCREMENT = 1
CHARACTER SET utf8
COLLATE utf8_unicode_ci
ROW_FORMAT = DYNAMIC;

--
-- Definition for table oauth_refresh_tokens
--
DROP TABLE IF EXISTS oauth_refresh_tokens;
CREATE TABLE oauth_refresh_tokens (
  id VARCHAR(40) NOT NULL,
  access_token_id VARCHAR(40) NOT NULL,
  expire_time INT(11) NOT NULL,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (access_token_id),
  UNIQUE INDEX oauth_refresh_tokens_id_unique (id),
  CONSTRAINT oauth_refresh_tokens_access_token_id_foreign FOREIGN KEY (access_token_id)
    REFERENCES oauth_access_tokens(id) ON DELETE CASCADE ON UPDATE RESTRICT
)
ENGINE = INNODB
CHARACTER SET utf8
COLLATE utf8_unicode_ci
ROW_FORMAT = DYNAMIC;

-- An error occurred while generating script for objects of type 'Triggers':
-- Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'information_schema.t1.EVENT_OBJECT_SCHEMA' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by

-- 
-- Restore previous SQL mode
-- 
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;

-- 
-- Enable foreign keys
-- 
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;